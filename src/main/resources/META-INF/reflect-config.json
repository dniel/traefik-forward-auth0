[
{
  "name":"[B"}
,
{
  "name":"[C"}
,
{
  "name":"[D"}
,
{
  "name":"[F"}
,
{
  "name":"[I"}
,
{
  "name":"[J"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"}
,
{
  "name":"[Lio.micronaut.http.HttpMethod;"}
,
{
  "name":"[Ljava.lang.StackTraceElement;"}
,
{
  "name":"[Ljava.lang.String;"}
,
{
  "name":"[Ljava.lang.Throwable;"}
,
{
  "name":"[Ljavax.management.openmbean.CompositeData;"}
,
{
  "name":"[Lsun.security.pkcs.SignerInfo;"}
,
{
  "name":"[S"}
,
{
  "name":"[Z"}
,
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.MDCConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.core.OutputStreamAppender",
  "methods":[{"name":"setEncoder","parameterTypes":["ch.qos.logback.core.encoder.Encoder"] }]}
,
{
  "name":"ch.qos.logback.core.encoder.LayoutWrappingEncoder",
  "methods":[{"name":"setParent","parameterTypes":["ch.qos.logback.core.spi.ContextAware"] }]}
,
{
  "name":"ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
  "methods":[{"name":"setPattern","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"ch.qos.logback.core.pattern.color.CyanCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.core.pattern.color.GrayCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.core.pattern.color.GreenCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"ch.qos.logback.core.pattern.color.MagentaCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonIgnoreProperties"}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonUnwrapped"}
,
{
  "name":"com.fasterxml.jackson.annotation.JsonValue"}
,
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper"}
,
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.module.blackbird.deser.BBDeserializerModifier",
  "methods":[
    {"name":"booleanTrampoline","parameterTypes":["com.fasterxml.jackson.module.blackbird.deser.BBDeserializerModifier$ObjBooleanBiFunction","java.lang.Object","boolean"] }, 
    {"name":"intTrampoline","parameterTypes":["com.fasterxml.jackson.module.blackbird.deser.BBDeserializerModifier$ObjIntBiFunction","java.lang.Object","int"] }, 
    {"name":"longTrampoline","parameterTypes":["com.fasterxml.jackson.module.blackbird.deser.BBDeserializerModifier$ObjLongBiFunction","java.lang.Object","long"] }, 
    {"name":"trampoline","parameterTypes":["java.util.function.BiFunction","java.lang.Object","java.lang.Object"] }
  ]}
,
{
  "name":"com.google.common.util.concurrent.AbstractFuture",
  "fields":[
    {"name":"listeners"}, 
    {"name":"value"}, 
    {"name":"waiters"}
  ]}
,
{
  "name":"com.google.common.util.concurrent.AbstractFuture$Waiter",
  "fields":[
    {"name":"next"}, 
    {"name":"thread"}
  ]}
,
{
  "name":"com.sun.crypto.provider.AESCipher$General",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.ARCFOURCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.DESCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.DESedeCipher",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.DHParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.GaloisCounterMode$AESGCM",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.HmacCore$HmacSHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"}
,
{
  "name":"com.sun.management.GarbageCollectorMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"com.sun.management.GcInfo",
  "queryAllPublicMethods":true,
  "fields":[
    {"name":"builder"}, 
    {"name":"extAttributes"}
  ]}
,
{
  "name":"com.sun.management.HotSpotDiagnosticMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "queriedMethods":[
    {"name":"getCpuLoad","parameterTypes":[] }, 
    {"name":"getProcessCpuLoad","parameterTypes":[] }
  ]}
,
{
  "name":"com.sun.management.ThreadMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "queryAllPublicMethods":true,
  "queriedMethods":[
    {"name":"getMaxFileDescriptorCount","parameterTypes":[] }, 
    {"name":"getOpenFileDescriptorCount","parameterTypes":[] }
  ]}
,
{
  "name":"com.sun.management.VMOption",
  "queryAllPublicMethods":true}
,
{
  "name":"com.sun.management.internal.GarbageCollectorExtImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"com.sun.management.internal.HotSpotDiagnostic",
  "queryAllPublicConstructors":true}
,
{
  "name":"com.sun.management.internal.HotSpotThreadImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"com.sun.management.internal.OperatingSystemImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.typesafe.config.Config"}
,
{
  "name":"dniel.forwardauth.application.$CommandDispatcher$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.application.commandhandlers.$AuthenticateHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.application.commandhandlers.$AuthorizeHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.application.commandhandlers.$SigninHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.application.commandhandlers.$SignoutHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.application.commandhandlers.$UserinfoHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.domain.authorize.AuthorizeNonce",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String"] }, 
    {"name":"getValue","parameterTypes":[] }
  ]}
,
{
  "name":"dniel.forwardauth.domain.authorize.AuthorizeNonce$Companion",
  "queriedMethods":[{"name":"generate","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.domain.authorize.AuthorizeState",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["dniel.forwardauth.domain.authorize.RequestedUrl","dniel.forwardauth.domain.authorize.AuthorizeNonce"] }, 
    {"name":"getNonce","parameterTypes":[] }, 
    {"name":"getOriginUrl","parameterTypes":[] }
  ]}
,
{
  "name":"dniel.forwardauth.domain.authorize.AuthorizeState$Companion"}
,
{
  "name":"dniel.forwardauth.domain.authorize.RequestedUrl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"<init>","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.lang.String"] }, 
    {"name":"getHost","parameterTypes":[] }, 
    {"name":"getMethod","parameterTypes":[] }, 
    {"name":"getProtocol","parameterTypes":[] }, 
    {"name":"getUri","parameterTypes":[] }
  ]}
,
{
  "name":"dniel.forwardauth.domain.events.$EventRepository$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.domain.shared.service.$VerifyTokenService$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.auth0.$Auth0Client$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.auth0.$Auth0JwtDecoder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.auth0.$Auth0Utils$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.auth0.Auth0Client"}
,
{
  "name":"dniel.forwardauth.infrastructure.auth0.Auth0Client$AuthorizationCodeTokenRequest",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getClientId","parameterTypes":[] }, 
    {"name":"getClientSecret","parameterTypes":[] }, 
    {"name":"getCode","parameterTypes":[] }, 
    {"name":"getGrantType","parameterTypes":[] }, 
    {"name":"getRedirectUrl","parameterTypes":[] }, 
    {"name":"getScope","parameterTypes":[] }
  ]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.$ApplicationConfigLogger$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.$ApplicationInitializer$ApplicationEventListener$applicationStartedUp1$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.$ApplicationInitializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.config.$ApplicationSettings$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.config.$DefaultApplicationSettings$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.config.$ForwardAuthSettings$Definition$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.config.$ForwardAuthSettings$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.controllers.$Auth0CallbackController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.controllers.$AuthorizeController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.controllers.$EventController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.controllers.$RootController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.controllers.$SignoutController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.controllers.$UserinfoController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.controllers.requests.$AuthorizeRequestBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.security.$Auth0CodeGrantProvider$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.security.$Auth0LoginHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.micronaut.security.$Auth0TokenValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Action",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getClazz","parameterTypes":[] }, 
    {"name":"getFields","parameterTypes":[] }, 
    {"name":"getHref","parameterTypes":[] }, 
    {"name":"getMethod","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getTitle","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }
  ]}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Action$Builder"}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Action$Companion",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Action$Method"}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Embedded",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.EmbeddedRepresentation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getActions","parameterTypes":[] }, 
    {"name":"getClazz","parameterTypes":[] }, 
    {"name":"getEntities","parameterTypes":[] }, 
    {"name":"getLinks","parameterTypes":[] }, 
    {"name":"getProperties","parameterTypes":[] }, 
    {"name":"getRel","parameterTypes":[] }, 
    {"name":"getTitle","parameterTypes":[] }
  ]}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.EmbeddedRepresentation$Builder"}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.EmbeddedRepresentation$Companion",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Field",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getClazz","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getTitle","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }, 
    {"name":"getValue","parameterTypes":[] }
  ]}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Field$Builder"}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Field$Companion",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Field$Type"}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Link",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getClazz","parameterTypes":[] }, 
    {"name":"getHref","parameterTypes":[] }, 
    {"name":"getRel","parameterTypes":[] }, 
    {"name":"getTitle","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }
  ]}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Link$Builder"}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Link$Companion",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Root",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getActions","parameterTypes":[] }, 
    {"name":"getClazz","parameterTypes":[] }, 
    {"name":"getEntities","parameterTypes":[] }, 
    {"name":"getLinks","parameterTypes":[] }, 
    {"name":"getProperties","parameterTypes":[] }, 
    {"name":"getTitle","parameterTypes":[] }
  ]}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Root$Builder"}
,
{
  "name":"dniel.forwardauth.infrastructure.siren.Root$Companion",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"io.micronaut.aop.internal.InterceptorRegistryBean",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.buffer.netty.$DefaultByteBufAllocatorConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.buffer.netty.$NettyByteBufferFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.cache.$JCacheMetricsBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.cache.$MicronautCaffeineCacheMetricsBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.datasource.$DataSourcePoolMetricsBinderFactory$DataSourceMeterBinder0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.datasource.$DataSourcePoolMetricsBinderFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.executor.$ExecutorServiceMetricsBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.grpc.$GrpcMetricsListenerFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.grpc.$GrpcMetricsListenerFactory$GrpcClientMetrics1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.grpc.$GrpcMetricsListenerFactory$GrpcServerMetrics0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.jvm.$JvmMeterRegistryBinderFactory$ClassLoaderMetrics3$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.jvm.$JvmMeterRegistryBinderFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.jvm.$JvmMeterRegistryBinderFactory$JvmGcMetrics0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.jvm.$JvmMeterRegistryBinderFactory$JvmMemoryMetrics1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.jvm.$JvmMeterRegistryBinderFactory$JvmThreadMetrics2$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.logging.$LogbackMeterRegistryBinderFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.logging.$LogbackMeterRegistryBinderFactory$LogbackMetrics0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$ByteBufAllocatorMetricsBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$InstrumentedEpollEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$InstrumentedEventLoopTaskQueueFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$InstrumentedKQueueEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$InstrumentedNioEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.netty.$NettyMetricsPipelineBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.system.$SystemMeterRegistryBinderFactoryFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.system.$SystemMeterRegistryBinderFactoryFactory$FileDescriptorMetrics2$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.system.$SystemMeterRegistryBinderFactoryFactory$ProcessorMetrics1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.system.$SystemMeterRegistryBinderFactoryFactory$UptimeMetrics0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.web.$ClientRequestMetricRegistryFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.web.$HttpMeterFilterFactory$AddClientPercentileMeterFilter1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.web.$HttpMeterFilterFactory$AddServerPercentileMeterFilter0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.web.$HttpMeterFilterFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.binder.web.$ServerRequestMeterRegistryFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.$MetricsEndpoint$AvailableTag$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.$MetricsEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.$MetricsEndpoint$MetricDetails$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.$MetricsEndpoint$MetricNames$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.management.endpoint.$MetricsEndpoint$Sample$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.$ExportConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$CompositeMeterRegistry0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.$MeterRegistryFactory$MeterRegistryConfigurer1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.intercept.$CountedInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.intercept.$TimedInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.logging.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.logging.$LoggingMeterRegistryFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.logging.$LoggingMeterRegistryFactory$LoggingMeterRegistry0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.prometheus.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.prometheus.$PrometheusMeterRegistryFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.prometheus.$PrometheusMeterRegistryFactory$PrometheusConfig0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.configuration.metrics.micrometer.prometheus.management.$PrometheusEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.context.env.PropertiesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.context.env.hocon.HoconPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.context.env.hocon.HoconPropertySourceLoaderImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.context.env.yaml.YamlPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.context.event.ApplicationEventPublisherFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.core.annotation.Introspected"}
,
{
  "name":"io.micronaut.discovery.$DefaultCompositeDiscoveryClient$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.$DefaultServiceInstanceIdGenerator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.client.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.client.config.$DistributedPropertySourceLocator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.config.$DefaultCompositeConfigurationClient$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.$ConsulConfiguration$ConsulConfigDiscoveryConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.$ConsulConfiguration$ConsulConnectionPoolConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.$ConsulConfiguration$ConsulDiscoveryConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.$ConsulConfiguration$ConsulRegistrationConfiguration$CheckConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.$ConsulConfiguration$ConsulRegistrationConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.$ConsulConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.$ConsulServiceInstanceList$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$AbstractConsulClient$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$AbstractServiceEntry$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$CatalogEntry$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$CheckEntry$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$ConsulAslTokenFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$HTTPCheck$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$HealthEntry$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$KeyValue$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$LocalAgentConfiguration$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$MemberEntry$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$NewCheck$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$NewServiceEntry$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$NodeEntry$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$ServiceEntry$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.client.v1.$TTLCheck$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.config.$ConsulConfigurationClient$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.health.$ConsulHealthIndicator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.consul.registration.$ConsulAutoRegistration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.$EurekaConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.$EurekaConfiguration$EurekaConnectionPoolConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.$EurekaConfiguration$EurekaDiscoveryConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.$EurekaConfiguration$EurekaRegistrationConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.$EurekaServiceInstanceList$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.client.v2.$AbstractEurekaClient$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.client.v2.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.client.v2.$DataCenterTypeInfoResolver$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.client.v2.$InstanceInfo$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.client.v2.$MyDataCenterInfo$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.condition.$RequiresEurekaCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.health.$EurekaHealthIndicator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.eureka.registration.$EurekaAutoRegistration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.spring.config.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.spring.config.$SpringCloudClientConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.spring.config.$SpringCloudClientConfiguration$SpringCloudConnectionPoolConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.spring.config.$SpringCloudClientConfiguration$SpringConfigDiscoveryConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.spring.config.$SpringCloudConfigurationClient$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.spring.config.client.$SpringCloudConfigClient$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.$AbstractVaultResponse$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.$VaultClientConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.$VaultClientConfiguration$VaultClientConnectionPoolConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.$VaultClientConfiguration$VaultClientDiscoveryConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.$VaultConfigurationClient$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.v1.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.v1.$VaultConfigHttpClientV1$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.v1.$VaultResponseV1$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.v2.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.v2.$VaultConfigHttpClientV2$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.v2.$VaultResponseData$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.discovery.vault.config.v2.$VaultResponseV2$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.health.$DefaultCurrentHealthStatus$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.health.$HealthStatus$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.health.$HeartbeatConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.health.$HeartbeatDiscoveryClientCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.health.$HeartbeatTask$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.HttpStatus"}
,
{
  "name":"io.micronaut.http.bind.$DefaultRequestBinderRegistry$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultConnectionPoolConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$DefaultHttpClientConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$DefaultLoadBalancerResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$ServiceHttpClientCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceConnectionPoolConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactory$HealthCheckStarter1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactory$ServiceInstanceList0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.bind.$DefaultHttpClientBinderRegistry$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.filter.$DefaultHttpClientFilterResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.interceptor.$HttpClientIntroductionAdvice$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.interceptor.configuration.$DefaultClientVersioningConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.interceptor.configuration.$NamedClientVersioningConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.loadbalance.$DiscoveryClientLoadBalancerFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.loadbalance.$LoadBalancerConverters$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.loadbalance.$ServiceInstanceListLoadBalancerFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.netty.$DefaultNettyHttpClientRegistry$HttpClient0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.client.netty.ssl.$NettyClientSslBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.codec.$CodecConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.converters.$HttpConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.cookie.$SameSiteConverter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.hateoas.$AbstractResource$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.hateoas.$DefaultLink$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.hateoas.$GenericResource$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.hateoas.$JsonError$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.hateoas.$Resource$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.hateoas.$VndError$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$DefaultEventLoopGroup1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroup0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$EpollAvailabilityCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$EpollEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$KQueueAvailabilityCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$KQueueEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$NettyThreadFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$NettyThreadFactory$NettyThreadFactory0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.$NioEventLoopGroupFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.converters.$DefaultChannelOptionFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.converters.$EpollChannelOptionFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.channel.converters.$KQueueChannelOptionFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.configuration.$NettyGlobalConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.cookies.NettyCookieFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.stream.HttpStreamsServerHandler",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.micronaut.http.netty.websocket.$NettyServerWebSocketBroadcaster$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.netty.websocket.$WebSocketMessageEncoder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.$CoroutineHelper$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$CorsConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$HostResolutionConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$HttpLocaleResolutionConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$MultipartConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.$RouteExecutor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.binding.$BasicAuthArgumentBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.binding.$LocaleArgumentBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.binding.$RequestArgumentSatisfier$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.codec.$TextStreamCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.context.$ServerRequestContextInstrumentation$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.cors.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.cors.$CorsFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.cors.$CorsOriginConverter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.exceptions.$ContentLengthExceededHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.exceptions.$ConversionErrorHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.exceptions.$DuplicateRouteHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.exceptions.$HttpStatusHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.exceptions.$JsonExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.exceptions.$URISyntaxHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.exceptions.$UnsatisfiedArgumentHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.exceptions.$UnsatisfiedRouteHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.exceptions.response.$HateoasErrorResponseProcessor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.$DefaultHttpCompressionStrategy$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.$DefaultHttpContentProcessorResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$BuildDefaultServer0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.$DefaultNettyEmbeddedServerFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.$FormDataHttpContentSubscriberFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.$NettyEmbeddedServerInstance$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.$NettyRequestArgumentSatisfier$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.NettyHttpResponseFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.NettyHttpServer$NettyHttpServerInitializer"}
,
{
  "name":"io.micronaut.http.server.netty.RoutingInBoundHandler",
  "queriedMethods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"io.micronaut.http.server.netty.SmartHttpContentCompressor"}
,
{
  "name":"io.micronaut.http.server.netty.binders.$NettyBinderRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.binders.$PublisherBodyBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$AccessLogger$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$FileTypeHandlerConfiguration$CacheControlConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$FileTypeHandlerConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Http2Settings$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Parent$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Worker$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.converters.$NettyConverters$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.decoders.HttpRequestDecoder"}
,
{
  "name":"io.micronaut.http.server.netty.encoders.HttpResponseEncoder"}
,
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonHttpContentSubscriberFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonViewMediaTypeCodecFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonViewServerFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.ssl.$BuildSelfSignedCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilder$SelfSignedNotConfigured$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilder$SelfSignedConfigured$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.ssl.$SslEnabledCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfiguration$CacheControlConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.netty.websocket.NettyServerWebSocketUpgradeHandler"}
,
{
  "name":"io.micronaut.http.server.util.$DefaultHttpClientAddressResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.util.$DefaultHttpHostResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.util.locale.$CompositeHttpLocaleResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.util.locale.$CookieLocaleResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.util.locale.$HttpFixedLocaleResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.util.locale.$HttpLocalizedMessageSource$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.util.locale.$RequestLocaleResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.server.websocket.$ServerWebSocketProcessor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.http.util.$OutgoingHttpRequestProcessorImpl$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.inject.provider.BeanProviderDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.inject.provider.JakartaProviderBeanDefinition",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.inject.provider.JavaxProviderBeanDefinition"}
,
{
  "name":"io.micronaut.jackson.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.$JacksonConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.$ObjectMapperFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.$ObjectMapperFactory$JsonFactory0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.codec.$JsonMediaTypeCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.core.env.CloudFoundryVcapApplicationPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.core.env.CloudFoundryVcapServicesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.core.env.EnvJsonPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.core.env.JsonPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.databind.$DatabindPropertyBinderExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.databind.$JacksonDatabindMapper$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.databind.convert.$JacksonConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.kotlin.$KotlinModuleFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.kotlin.$KotlinModuleFactory$KotlinModuleFactory0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.modules.$BeanIntrospectionModule$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.serialize.$ConvertibleValuesSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.serialize.$JacksonObjectSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.serialize.$JsonNodeDeserializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.serialize.$JsonNodeSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.serialize.$OptionalValuesSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.serialize.$ResourceModule$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.jackson.serialize.$ResourceSerializerModifier$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.json.$JsonObjectSerializer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.json.bind.$JsonBeanPropertyBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.json.codec.$JsonMediaTypeCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.json.codec.$JsonStreamMediaTypeCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.json.convert.$JsonConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.logging.$LogLevel$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.logging.$PropertiesLoggingLevelsConfigurer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.logging.impl.$Log4jLoggingSystem$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.logging.impl.$LogbackLoggingSystem$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.$EndpointConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.$EndpointDefaultConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.$EndpointEnabledCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.$EndpointSensitivityProcessor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.$EndpointsFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.beans.$BeansEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.beans.impl.$DefaultBeanDefinitionData$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.beans.impl.$DefaultBeanDefinitionDataCollector$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.env.$EnvironmentEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.health.$HealthEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.health.$HealthEndpoint$StatusConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.health.filter.$HealthResultFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.info.$InfoEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.info.impl.$ReactiveInfoAggregator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.info.source.$BuildInfoSource$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.info.source.$ConfigurationInfoSource$Definition$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.info.source.$ConfigurationInfoSource$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.info.source.$GitInfoSource$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.loggers.$LoggersEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.loggers.impl.$DefaultLoggersManager$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.loggers.impl.$Log4jLoggingSystem$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.loggers.impl.$LogbackLoggingSystem$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.processors.$DeleteEndpointRouteBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.processors.$ReadEndpointRouteBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.processors.$WriteEndpointRouteBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.refresh.$RefreshEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.routes.$RoutesEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.routes.impl.$DefaultRouteData$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.routes.impl.$DefaultRouteDataCollector$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.stop.$ServerStopEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.threads.$ThreadDumpEndpoint$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.endpoint.threads.impl.$DefaultThreadInfoMapper$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.health.aggregator.$DefaultHealthAggregator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.health.indicator.$DefaultHealthResult$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.health.indicator.discovery.$DiscoveryClientHealthIndicator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.health.indicator.discovery.$DiscoveryClientHealthIndicatorConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.health.indicator.diskspace.$DiskSpaceIndicator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.health.indicator.diskspace.$DiskSpaceIndicatorConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.health.indicator.jdbc.$JdbcIndicator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicator$ApplicationEventListener$onServerStarted2$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicator$ApplicationEventListener$onServiceStarted1$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.management.health.monitor.$HealthMonitorTask$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.problem.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.problem.$HttpStatusType$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.problem.$ProblemErrorResponseProcessor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.problem.$ProblemErrorResponseProcessor$ThrowableProblemWithoutStacktrace$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.problem.$ThrowableProblemHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.problem.HttpStatusType",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getStatusCode","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.problem.ProblemErrorResponseProcessor",
  "allDeclaredClasses":true}
,
{
  "name":"io.micronaut.problem.ProblemErrorResponseProcessor$ThrowableProblemWithoutStacktrace",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getDetail","parameterTypes":[] }, 
    {"name":"getInstance","parameterTypes":[] }, 
    {"name":"getParameters","parameterTypes":[] }, 
    {"name":"getStatus","parameterTypes":[] }, 
    {"name":"getTitle","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }
  ]}
,
{
  "name":"io.micronaut.problem.conf.$ProblemConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.problem.serde.$ProblemSerdeImport$IntrospectionRef0",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.problem.serde.$ProblemSerdeImport$IntrospectionRef1",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.problem.violations.$ProblemConstraintViolationExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.problem.violations.$Violation$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactive.flow.converters.$FlowConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactive.reactor.instrument.$ReactorInstrumentation$ReactorInstrumenterFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.convert.$ReactorConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.convert.$ReactorToRxJava2ConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.convert.$ReactorToRxJava3ConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.http.client.$ReactorHttpClientFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.http.client.$ReactorHttpClientFactory$StreamingHttpClient0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.http.client.$ReactorReactiveClientResultTransformer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.http.client.proxy.$ReactorProxyHttpClientFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.http.client.proxy.$ReactorProxyHttpClientFactory$ProxyHttpClient0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.http.client.sse.$ReactorSseClientFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.http.client.sse.$ReactorSseClientFactory$SseClient0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.http.client.websocket.$ReactorWebSocketClientFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.reactor.http.client.websocket.$ReactorWebSocketClientFactory$WebSocketClient0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.retry.annotation.$DefaultRetryPredicate$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.retry.intercept.$DefaultRetryInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.retry.intercept.$RecoveryInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.$ApplicationConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.$ApplicationConfiguration$InstanceConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.context.$CompositeMessageSource$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.context.env.$ConfigurationIntroductionAdvice$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.context.scope.$ThreadLocalCustomScope$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.context.scope.refresh.$RefreshInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.context.scope.refresh.$RefreshScope$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.converters.reactive.$ReactiveTypeConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.converters.time.$TimeConverterRegistrar$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.http.codec.$TextPlainCodec$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.http.scope.$RequestCustomScope$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.runtime.server.watch.event.$FileWatchRestartListener$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.$DefaultTaskExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.$ScheduledExecutorTaskScheduler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.async.$AsyncInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$DefaultExecutorSelector$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$DefaultThreadFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Configuration0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$UserExecutorConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.executor.$UserExecutorConfiguration$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.instrument.$ExecutorServiceInstrumenter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.io.watch.$DefaultWatchThread$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.io.watch.$FileWatchCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.io.watch.$FileWatchConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.scheduling.processor.$ScheduledMethodProcessor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$Authentication$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$AuthenticationArgumentBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$AuthenticationExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$AuthenticationModeCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$Authenticator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$BasicAuthAuthenticationConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$BasicAuthAuthenticationFetcher$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$ClientAuthentication$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$CookieBasedAuthenticationModeCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$DefaultAuthorizationExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$PrincipalArgumentBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.authentication.$UsernamePasswordCredentials$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.config.$InterceptUrlMapConverter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.config.$RedirectConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.config.$RedirectConfigurationProperties$ForbiddenRedirectConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.config.$RedirectConfigurationProperties$ForbiddenRedirectConfigurationProperties$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.config.$RedirectConfigurationProperties$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.config.$RedirectConfigurationProperties$RefreshRedirectConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.config.$RedirectConfigurationProperties$RefreshRedirectConfigurationProperties$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.config.$RedirectConfigurationProperties$UnauthorizedRedirectConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.config.$RedirectConfigurationProperties$UnauthorizedRedirectConfigurationProperties$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.config.$SecurityConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.$LoginController$Definition$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.$LoginController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.$LoginControllerConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.$LogoutController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.$LogoutControllerConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.introspection.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.introspection.$DefaultIntrospectionProcessor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.introspection.$IntrospectionConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.introspection.$IntrospectionController$Definition$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.introspection.$IntrospectionController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.introspection.$IntrospectionRequest$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.endpoints.introspection.$IntrospectionResponse$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.errors.$CookiePriorToLoginPersistence$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.errors.$OauthErrorResponseExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.filters.$SecurityFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.filters.$SecurityFilterConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.filters.$SecurityFilterConfigurationProperties$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.rules.$AbstractSecurityRule$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.rules.$ConfigurationInterceptUrlMapRule$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.rules.$InterceptUrlMapRule$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.rules.$IpPatternsRule$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.rules.$SecuredAnnotationRule$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.rules.$SensitiveEndpointRule$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.$DefaultRolesFinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.$TokenAuthenticationFetcher$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.config.$TokenConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.bearer.$AccessRefreshTokenLoginHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.bearer.$BearerTokenConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.bearer.$BearerTokenReader$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.config.$JwtConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.converters.$EncryptionMethodConverter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.converters.$JWEAlgorithmConverter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.converters.$JWSAlgorithmConverter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.converters.$KeyTypeConverter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.cookie.$JwtCookieClearerLogoutHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.cookie.$JwtCookieConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.cookie.$JwtCookieLoginHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.cookie.$JwtCookieTokenReader$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.cookie.$RefreshTokenCookieConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.encryption.ec.$ECEncryptionFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.encryption.ec.$ECEncryptionFactory$EncryptionConfiguration0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.encryption.rsa.$RSAEncryptionFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.encryption.rsa.$RSAEncryptionFactory$EncryptionConfiguration0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.encryption.secret.$SecretEncryptionConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.encryption.secret.$SecretEncryptionFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.encryption.secret.$SecretEncryptionFactory$EncryptionConfiguration0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.endpoints.$KeysController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.endpoints.$KeysControllerConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.endpoints.$OauthController$Definition$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.endpoints.$OauthController$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.endpoints.$OauthControllerConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.endpoints.$TokenRefreshRequest$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.generator.$AccessTokenConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.generator.$DefaultAccessRefreshTokenGenerator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.generator.$JwtTokenGenerator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.generator.$RefreshTokenConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.generator.$RefreshTokenConfigurationProperties$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.generator.$SignedRefreshTokenGenerator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.generator.claims.$JWTClaimsSetGenerator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.render.$AccessRefreshToken$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.render.$BearerAccessRefreshToken$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.render.$BearerTokenRenderer$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.ec.$ECSignatureFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.ec.$ECSignatureFactory$SignatureConfiguration0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.ec.$ECSignatureGeneratorFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.ec.$ECSignatureGeneratorFactory$SignatureGeneratorConfiguration0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.jwks.$DefaultJwkValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.jwks.$JwksSignature$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.jwks.$JwksSignatureConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.jwks.$JwksSignatureConfigurationProperties$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.rsa.$RSASignatureFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.rsa.$RSASignatureFactory$SignatureConfiguration0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.rsa.$RSASignatureGeneratorFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.rsa.$RSASignatureGeneratorFactory$SignatureGeneratorConfiguration0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.secret.$SecretSignature$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.secret.$SecretSignatureConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.signature.secret.$SecretSignatureConfiguration$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.validator.$AudienceJwtClaimsValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.validator.$DefaultJwtAuthenticationFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.validator.$ExpirationJwtClaimsValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.validator.$IssuerJwtClaimsValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.validator.$JwtClaimsValidatorConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.validator.$JwtTokenValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.validator.$NotBeforeJwtClaimsValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.jwt.validator.$SubjectNotNullJwtClaimsValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.propagation.$HttpHeaderTokenPropagator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.propagation.$HttpHeaderTokenPropagatorConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.propagation.$TokenPropagationConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.propagation.$TokenPropagationHttpClientFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.token.reader.$DefaultTokenResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.utils.$DefaultSecurityService$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.x509.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.x509.$X509AuthenticationArgumentBinder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.x509.$X509AuthenticationFetcher$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.x509.$X509ConfigurationProperties$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.security.x509.$X509ConfigurationProperties$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.serde.annotation.Serdeable"}
,
{
  "name":"io.micronaut.serde.config.$DeserializationConfiguration$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.serde.config.$SerdeConfiguration$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.serde.config.$SerializationConfiguration$Intercepted$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.$ValidatingInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.exceptions.$ConstraintExceptionHandler$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.$DefaultClockProvider$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.$DefaultValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.$DefaultValidatorConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.$DefaultValidatorFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.constraints.$EmailValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.constraints.$PatternValidator$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.extractors.$DefaultValueExtractors$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.extractors.$DefaultValueExtractors$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.messages.$DefaultValidationMessages$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.validation.validator.resolver.$CompositeTraversableResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.$AnnotatedFilterRouteBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.$AnnotatedMethodRouteBuilder$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.$DefaultRouter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.naming.$ConfigurableUriNamingStrategy$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.naming.$HyphenatedUriNamingStrategy$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.resource.$StaticResourceConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.resource.$StaticResourceResolverFactory$Build0$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.resource.$StaticResourceResolverFactory$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.version.$ConfigurationDefaultVersionProvider$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.version.$RouteVersionFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.version.$RoutesVersioningConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.version.$VersionAwareRouterListener$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.version.resolution.$HeaderVersionResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.version.resolution.$HeaderVersionResolverConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.version.resolution.$ParameterVersionResolver$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.web.router.version.resolution.$ParameterVersionResolverConfiguration$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.micronaut.websocket.interceptor.$ClientWebSocketInterceptor$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"}
,
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]}
,
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "queryAllDeclaredMethods":true}
,
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]}
,
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "queriedMethods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]}
,
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"io.netty.channel.ChannelInitializer",
  "queriedMethods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]}
,
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]}
,
{
  "name":"io.netty.channel.CombinedChannelDuplexHandler",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "queriedMethods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]}
,
{
  "name":"io.netty.channel.SimpleChannelInboundHandler",
  "queriedMethods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]}
,
{
  "name":"io.netty.handler.codec.MessageToMessageCodec",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.handler.codec.MessageToMessageDecoder",
  "queriedMethods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]}
,
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "queriedMethods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]}
,
{
  "name":"io.netty.handler.codec.http.HttpContentDecoder",
  "queriedMethods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]}
,
{
  "name":"io.netty.handler.codec.http.HttpContentDecompressor"}
,
{
  "name":"io.netty.handler.codec.http.HttpContentEncoder",
  "queriedMethods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]}
,
{
  "name":"io.netty.handler.codec.http.HttpServerCodec"}
,
{
  "name":"io.netty.handler.codec.http.HttpServerKeepAliveHandler",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler",
  "queriedMethods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler"}
,
{
  "name":"io.netty.handler.flow.FlowControlHandler",
  "queriedMethods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]}
,
{
  "name":"io.netty.handler.stream.ChunkedWriteHandler",
  "queriedMethods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.handler.timeout.IdleStateHandler",
  "queriedMethods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]}
,
{
  "name":"io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]}
,
{
  "name":"jakarta.inject.Singleton"}
,
{
  "name":"java.io.FilePermission"}
,
{
  "name":"java.io.ObjectInputStream"}
,
{
  "name":"java.io.ObjectOutputStream"}
,
{
  "name":"java.io.PrintStream"}
,
{
  "name":"java.io.PrintWriter"}
,
{
  "name":"java.io.Serializable",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.lang.Boolean",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.Class",
  "methods":[
    {"name":"getRecordComponents","parameterTypes":[] }, 
    {"name":"isRecord","parameterTypes":[] }, 
    {"name":"isSealed","parameterTypes":[] }
  ],
  "queriedMethods":[{"name":"getPermittedSubclasses","parameterTypes":[] }]}
,
{
  "name":"java.lang.Comparable",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.lang.Deprecated",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.Exception",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.Integer",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.Object"}
,
{
  "name":"java.lang.RuntimeException",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.lang.RuntimePermission"}
,
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.StackTraceElement",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.String"}
,
{
  "name":"java.lang.Throwable",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getLocalizedMessage","parameterTypes":[] }, 
    {"name":"getStackTrace","parameterTypes":[] }, 
    {"name":"getSuppressed","parameterTypes":[] }
  ]}
,
{
  "name":"java.lang.Throwable$PrintStreamOrWriter"}
,
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]}
,
{
  "name":"java.lang.annotation.Documented",
  "queryAllDeclaredMethods":true}
,
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]}
,
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[{"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]}
,
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods":[
    {"name":"defineClass","parameterTypes":["byte[]"] }, 
    {"name":"hasFullPrivilegeAccess","parameterTypes":[] }
  ]}
,
{
  "name":"java.lang.management.BufferPoolMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.ClassLoadingMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.CompilationMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.LockInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]}
,
{
  "name":"java.lang.management.ManagementPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"java.lang.management.MemoryMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.MemoryManagerMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.MemoryPoolMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true,
  "methods":[{"name":"from","parameterTypes":["javax.management.openmbean.CompositeData"] }]}
,
{
  "name":"java.lang.management.MonitorInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.PlatformLoggingMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.management.RuntimeMXBean",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"getInputArguments","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]}
,
{
  "name":"java.lang.management.ThreadInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"java.lang.reflect.Executable",
  "methods":[{"name":"getParameters","parameterTypes":[] }]}
,
{
  "name":"java.lang.reflect.Method"}
,
{
  "name":"java.lang.reflect.Parameter",
  "methods":[{"name":"getName","parameterTypes":[] }]}
,
{
  "name":"java.math.BigDecimal"}
,
{
  "name":"java.math.BigInteger"}
,
{
  "name":"java.net.NetPermission"}
,
{
  "name":"java.net.SocketPermission"}
,
{
  "name":"java.net.URI",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]}
,
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]}
,
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]}
,
{
  "name":"java.nio.ByteBuffer",
  "queriedMethods":[{"name":"alignedSlice","parameterTypes":["int"] }]}
,
{
  "name":"java.nio.DirectByteBuffer",
  "queriedMethods":[{"name":"<init>","parameterTypes":["long","int"] }]}
,
{
  "name":"java.security.AlgorithmParametersSpi"}
,
{
  "name":"java.security.AllPermission"}
,
{
  "name":"java.security.KeyStoreSpi"}
,
{
  "name":"java.security.SecureRandomParameters"}
,
{
  "name":"java.security.SecurityPermission"}
,
{
  "name":"java.security.interfaces.ECPrivateKey"}
,
{
  "name":"java.security.interfaces.ECPublicKey"}
,
{
  "name":"java.security.interfaces.RSAPrivateKey"}
,
{
  "name":"java.security.interfaces.RSAPublicKey"}
,
{
  "name":"java.sql.Date"}
,
{
  "name":"java.sql.Timestamp"}
,
{
  "name":"java.util.Date"}
,
{
  "name":"java.util.List"}
,
{
  "name":"java.util.Map"}
,
{
  "name":"java.util.PropertyPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]}
,
{
  "name":"java.util.logging.LogManager",
  "methods":[{"name":"getLoggingMXBean","parameterTypes":[] }]}
,
{
  "name":"java.util.logging.LoggingMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"javax.management.MBeanOperationInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"javax.management.MBeanServerBuilder",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"javax.management.ObjectName"}
,
{
  "name":"javax.management.openmbean.CompositeData"}
,
{
  "name":"javax.management.openmbean.OpenMBeanOperationInfoSupport"}
,
{
  "name":"javax.management.openmbean.TabularData"}
,
{
  "name":"javax.management.remote.rmi.RMIServer",
  "queryAllPublicMethods":true}
,
{
  "name":"javax.management.remote.rmi.RMIServerImpl_Stub",
  "methods":[{"name":"<init>","parameterTypes":["java.rmi.server.RemoteRef"] }]}
,
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "methods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]}
,
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]}
,
{
  "name":"jdk.management.jfr.ConfigurationInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"jdk.management.jfr.EventTypeInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"jdk.management.jfr.FlightRecorderMXBean",
  "queryAllPublicMethods":true}
,
{
  "name":"jdk.management.jfr.FlightRecorderMXBeanImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"jdk.management.jfr.RecordingInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"jdk.management.jfr.SettingDescriptorInfo",
  "queryAllPublicMethods":true}
,
{
  "name":"kotlin.Metadata",
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"bv","parameterTypes":[] }, 
    {"name":"d1","parameterTypes":[] }, 
    {"name":"d2","parameterTypes":[] }, 
    {"name":"k","parameterTypes":[] }, 
    {"name":"mv","parameterTypes":[] }, 
    {"name":"pn","parameterTypes":[] }, 
    {"name":"xi","parameterTypes":[] }, 
    {"name":"xs","parameterTypes":[] }
  ]}
,
{
  "name":"kotlin.Unit"}
,
{
  "name":"kotlin.jvm.JvmStatic",
  "queryAllDeclaredMethods":true}
,
{
  "name":"kotlin.jvm.internal.DefaultConstructorMarker"}
,
{
  "name":"kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
  "allPublicFields":true}
,
{
  "name":"no.vy.trafficinfo.baseline.micronaut.system.$TracingLoggingFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"no.vy.trafficinfo.baseline.micronaut.system.$UsernameLoggingFilter$Definition$Reference",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.apiguardian.api.API"}
,
{
  "name":"org.zalando.problem.AbstractThrowableProblem",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getDetail","parameterTypes":[] }, 
    {"name":"getInstance","parameterTypes":[] }, 
    {"name":"getParameters","parameterTypes":[] }, 
    {"name":"getStatus","parameterTypes":[] }, 
    {"name":"getTitle","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }
  ]}
,
{
  "name":"org.zalando.problem.DefaultProblem",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.zalando.problem.Exceptional",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.zalando.problem.Problem",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.zalando.problem.StatusType",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.zalando.problem.ThrowableProblem",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getCause","parameterTypes":[] }, 
    {"name":"getMessage","parameterTypes":[] }
  ]}
,
{
  "name":"reactor.core.publisher.Flux"}
,
{
  "name":"reactor.core.publisher.Mono"}
,
{
  "name":"sun.management.ClassLoadingImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.CompilationImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.ManagementFactoryHelper$1",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.MemoryImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.MemoryManagerImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.MemoryPoolImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.management.RuntimeImpl",
  "queryAllPublicConstructors":true}
,
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[{"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }],
  "queriedMethods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }
  ]}
,
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys"}, 
    {"name":"selectedKeys"}
  ]}
,
{
  "name":"sun.rmi.transport.DGCImpl_Skel",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.rmi.transport.DGCImpl_Stub",
  "methods":[{"name":"<init>","parameterTypes":["java.rmi.server.RemoteRef"] }]}
,
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.DSA$SHA224withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.DSA$SHA256withDSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.JavaKeyStore$DualFormatJKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.SHA2$SHA224",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.SHA5$SHA384",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.SHA5$SHA512",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.certpath.PKIXCertPathValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.rsa.PSSParameters",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.rsa.RSAPSSSignature",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.rsa.RSASignature$SHA224withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.rsa.RSASignature$SHA256withRSA",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.KeyManagerFactoryImpl$SunX509",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.SSLContextImpl$DefaultSSLContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.SSLContextImpl$TLSContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.util.ObjectIdentifier"}
,
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.CertificateExtensions"}
,
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}

]
